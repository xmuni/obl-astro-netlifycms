---
// import 'prism-themes/themes/prism-ghcolors.css'
// import 'prism-react-renderer/themes/github.css'

import Layout from "../layouts/Layout.astro"
import MarkdownLink from "../components/MarkdownLink.astro"
import MarkdownImage from "../components/MarkdownImage.astro"


type PostFrontmatter = {
    url: string,
    title: string,
    image: string,
    publishDate: string,
    description: string,
}

// https://docs.astro.build/en/guides/markdown-content/#mdx-features
export async function getStaticPaths() {
  const posts = await Astro.glob('../content/opuscoli/*.mdx')

  return posts.map(post => {
	return {
		params: { slug: post.frontmatter.url },
		props: {
			post,
			allPosts: posts,
			slug: post.frontmatter.url,
		}
	}
  })
}

const { post, allPosts } = Astro.props
const { Content } = post
const { url, title, image, publishDate, description } = post.frontmatter

// console.log('[slug] Astro.props', Astro.props)

const { pathname } = Astro.url

// const headings = Astro.props.post.getHeadings()
// console.log('[slug] Astro.props.post.getHeadings:', headings)

// const relatedPosts = getRelatedPosts(post, allPosts)

// console.log({ post, allPosts })
// console.log({ pathname })


const customHtmlComponents = {
    // Html elements
	// a: MarkdownLink,
    img: MarkdownImage,
}

---


<Layout title={ title } textColor="black" showBackground={ false } page='opuscolo'>
    <!-- <h2>Title: { title }</h2> -->
    <div class="post-container">
        <div class="post">
            <Content components={ customHtmlComponents }/>
        </div>
        <aside class="sidebar">
            <h2 class="div">Opuscoli</h2>
            <ul>
            {
                allPosts.map(post => (
                    <li>
                        <a href={ '/'+post.frontmatter.url } class={ pathname === '/'+post.frontmatter.url ? 'active' : 'inactive' }>
                            { post.frontmatter.title }
                        </a>
                    </li>
                ))
            }
            </ul>
        </aside>
    </div>
</Layout>


<style lang="scss" is:global>

    
    .post-container {
        max-width: 60rem;
        background-color: white;
        padding: 1vh 0;
        margin: 0 auto;
        margin-bottom: 3vh;

        display: grid;
        grid-template-columns: 1fr auto;
        position: relative;

        @media screen and (max-width: 600px) {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }

        .post {
            padding: 0 2vw;

            h2, h3, h4 {
                color: darkgreen;
            }

            img {
                max-width: 100%;
                border-radius: 3px;
            }
            
            a {
                color: darkgreen;
                text-decoration: underline;
                text-decoration-style: dotted;
                // padding-bottom: .1em;
                // border-bottom: 2px solid rgb(98, 189, 45);
            }

            blockquote {
                margin-left: 0;
                padding-left: .5rem;
                border-left: 2px solid #ddd;
            }
        }

        aside.sidebar {
            // background-color: bisque;
            border-left: 1px solid #ddd;
            padding: 1vh 2vw;

            position: sticky;
            top: 0;

            h2 {
                margin: 0;
                font-size: 1.1rem;
                font-weight: 600;
                color: #444;
            }

            ul {
                list-style: none;
                padding-left: 0;
                display: flex;
                flex-direction: column;
                gap: .5rem;
            }

            li {
                color: darkgreen;
                font-weight: 600;
                // padding: .1em .4em;

                a {
                    padding-left: .5em;
                    border-left: 3px solid transparent;

                    &.active {
                        // color: white;
                        // background-color: rgba(0, 100, 0, 0.2);
                        // border-bottom: 2px solid rgb(60, 138, 15);
                        border-color: rgb(60, 138, 15);
                    }
                }
            }

        }
    }
</style>

<!-- <Layout title={ post.frontmatter.title } headerImage={ coverImageUrl }>

    <div class="header-and-article overlap-onto-header">

        <PostHeader post={ post } coverImageUrl={ coverImageUrl }/>

        <div class='article-and-sidebar'>

            <div class="article-container">
                <article class={ `blog-post` } itemscope itemtype="http://schema.org/Article">
                    <Content components={ customHtmlComponents }/>
                </article>
            </div>

            <Sidebar>
                <Toc headings={ headings }/>
                <TagList someTags={ post.frontmatter.tags }/>
            </Sidebar>

        </div>

        { relatedPosts.length>0 ? <div class='more-posts'>related posts</div> : null }
    </div>


    {
        relatedPosts.length>0 &&
        <div class="related-posts">
            <PostsList posts={ relatedPosts.slice(0,5) }/>
        </div>
    }


    <MainButton><a href='/' class="view-all-posts">View all posts</a></MainButton>
</Layout> -->
